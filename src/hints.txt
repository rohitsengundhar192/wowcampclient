let createtable9= await dbConnection.query(`
create table if not exists ${country_code}_${customer_id}_edu_customer_db.39_userapp_common_holidays(
common_holiday_id 	integer primary key auto_increment,
	common_holiday_date 	date,
	common_holiday_name 	varchar(50)
);
`) ;
    let createtable1 = await dbConnection.query(`
    CREATE TABLE IF NOT EXISTS ${country_code}_${customer_id}_edu_customer_db.26_getwow_camp_participation_waiver_form (
      waiver_form_id 	integer primary key auto_increment,
       waiver_form_for_participant_user_id 	int ,
       waiver_form_download_datetime 	datetime ,
       waiver_form_upload_cloud_file_id 	varchar(255) 	,
       waiver_form_upload_datetime 	datetime ,
       waiver_form_uploaded_by_user_id 	int ,
       waiver_form_volunteer_user_id 	int ,
       waiver_form_authorized_by_user_id 	int
     );
    `);

    let createtable2 = await dbConnection.query(`
    create table if not exists ${country_code}_${customer_id}_edu_customer_db.39_userapp_common_holidays(
      common_holiday_id 	integer primary key auto_increment,
        common_holiday_date 	date,
        common_holiday_name 	varchar(50)
      );
    `);

    let createtable3 = await dbConnection.query(`
    create table if not exists manage_camps.audit_trail_for_book_camp_ticket(
      entry_by_user_id integer,
      entry_type varchar(20),
      entry_date_time datetime
      );
    `);

    let createtable4 = await dbConnection.query(`
    CREATE TABLE IF NOT EXISTS ${country_code}_${customer_id}_edu_customer_db.audit_trail_for_download_forms (
      id int primary key auto_increment,
      entry_by_user_id int,
      entry_type varchar(50),
      entry_datetime datetime
     );
    `);
    //check table if not
    let createtable5 = await dbConnection.query(`
    create table if not exists manage_camps.audit_trail_for_schedule_camp_activities(
      id int primary key auto_increment,
    entry_by_user_id integer,
    entry_type varchar(20),
    entry_datetime datetime
    );
`);


          //Table check
          let create_Table_check6 = await dbConnection.query(`
            create table if not exists manage_camps.${country_code}_${customer_id}_edu_customer_camp_booking_data(
             ticket_booking_id 	integer primary key auto_increment
	           ticket_for_wow_camp_id 	integer 	,
	           ticket_for_wow_camp_country_id 	varchar(3) 	,
	           ticket_for_user_id 	integer 	,
	           ticket_booking_datetime 	datetime ,
	           entry_ticket_type 	tinyint 	,
	           is_entry_ticket_paid_from_wow_wallet 	boolean 	,
	           entry_ticket_debit_transaction_id 	integer ,
	           is_ticket_cancelled 	boolean 	,
	           ticket_cancellation_datetime 	datetime,
	           is_ticket_scheduled_for_trip 	boolean ,
	           activity_group_trip_camp_id 	integer ,
	           activity_group_trip_id 	integer 	,
	           invoice_id 	bigint ,
	           is_camp_participation_verified_by_wow_guide_id 	integer 	,
	           has_completed_activity_id 	boolean 	,
	           is_added_as_new_participant_by_wow_guide 	boolean ,
	           is_assigned_to_activity_group 	boolean 	,
	           amount_collected_by_wow_guide 	integer
              );
              `);

        let wow_wallet_table_check7 = await dbConnection.query(`
          create table if not exists ${country_code}_getster_tech_accounts.${country_code}_${customer_id}_edu_customer_wow_wallets_ledger(
          transaction_id 	integer not null	primary key auto_increment,
	        transaction_datetime 	datetime 	,
	        is_debit 	boolean 	,
	        transaction_type 	smallint 	,
	        transaction_description 	varchar(255) 	,
	        user_id_of_wallet 	integer 	,
	        transaction_executed_by_user_id 	integer 	,
	        transaction_executed_by_user_id_face_id_login_image_datetime 	datetime 	,
	        transaction_browser_ip_address_based_geo_coordinates 	point 	,
	        transaction_reference_documents_cloudstorage_file_ids 	varchar(255) 	,
	        transaction_executed_via_app_id 	integer 	,
	        is_executed_via_custom_app 	boolean,
	        credit_entry_amount 	decimal(10,2) 	,
	        credit_entry_currency 	varchar(3) ,
	        debit_entry_amount 	decimal(10,2) ,
	        debit_entry_currency 	varchar(3) 	,
	        wallet_closing_balance_amount 	decimal(10,2) 	,
	        wallet_closing_balance_currency 	varchar(3) 	,
	        reference_document_from 	tinyint 	,
	        camp_id_or_collection_center_id 	integer ,
	        document_reference_id 	integer
              );
            `);

            let create_Table_check8 = await dbConnection.query(`
      create table if not exists manage_camps.2_getsterapp_${camp_id}_camp_id_booking_data(
      activity_group_trip_id	integer primary key auto_increment,
      activity_group_name	varchar(50),
      is_activity_group_deleted boolean,
      trip_datetime	datetime,
      customer_country_code	varchar(3),
      customer_id	integer,
      assigned_to_wow_guide_getster_id integer,
      is_trip_rescheduled	boolean,
      past_trip_scheduled_date datetime
      );
      `);
